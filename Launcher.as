package src.punks {	import flash.events.MouseEvent;	import src.core.Game;	import src.punks.levels.Level;	import flash.display.Shape;		public class Launcher extends PunksGameObject{				var type:String;		var level:int;		var cooldown:int;				var hitBox:Shape = new Shape();		var info:Info = new Info();		public function Launcher(_shooter, _level:int = 1){			shooter = _shooter;			level = _level;			friendly = shooter.friendly;			isVunerable = true;			super();						//hitBox			hitBox.graphics.beginFill(0xff0000, 0);			hitBox.graphics.drawRect(-20,-40, 40, 40);			hitBox.graphics.endFill();			addChild(hitBox);						//Info			addChildAt(info,0);			info.visible = false;			info.text_upgradePrice.mouseEnabled = false;						info.text_level.text = "Level: " + level;			info.text_upgradePrice.text = Fireworks.list[Fireworks.getIndex(type)].price[level];						this.addEventListener(MouseEvent.MOUSE_OVER, showInfo);			this.addEventListener(MouseEvent.MOUSE_OUT, hideInfo);			function showInfo(e:MouseEvent){				info.visible = true;			}			function hideInfo(e:MouseEvent){				info.visible = false;			}						info.button.addEventListener(MouseEvent.CLICK, upgrade);			function upgrade(e:MouseEvent){				//If it can be leveled up, do so				if ( level < Fireworks.list[Fireworks.getIndex(type)].price.length && Fireworks.list[Fireworks.getIndex("shell")].price[level] < Player.stars  ){					//Buy it					Player.stars -= Fireworks.list[Fireworks.getIndex(type)].price[level];					//Upgrade it					level++;					cooldown = getCooldown();					info.text_level.text = "Level: " + level;					//Show it					if ( level < Fireworks.list[Fireworks.getIndex(type)].price.length ){						info.text_upgradePrice.text = Fireworks.list[Fireworks.getIndex(type)].price[level];					}				}				//It its maxed out, say so				if ( level >= Fireworks.list[Fireworks.getIndex(type)].price.length ){					info.button.alpha = 0.5;					info.button.enabled = false;					info.text_upgradePrice.text = "--"				}			}		}		public function getCooldown():int{						return 100;		}		override public function kill(){			remove();		}				override public function remove(){			super.remove();		}			}}
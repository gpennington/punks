package src.punks {	import flash.display.MovieClip;	import flash.events.Event;	//import src.core.Game;	public class Projectile extends PunksGameObject{				//props		var angle:Number;		var speed:Number;		var speedX:Number;		var speedY:Number;				var damage:Number;		var life:Number;		//TODO remove this? Or maybe call it something else? It basically prevents it from hitting two things. Its very possible it could detect a hit with several objects in the same frame. It that happens it would try to remove itself several times in one frame.				var stillMoving:Boolean = true;				//var ignoreObstacles:Boolean = false;		public function Projectile(_shooter, _angle, _speed, _damage){			super();			shooter = _shooter;			angle = _angle;			speed = _speed;			speedX = speedY = speed;						damage = _damage;						x = _shooter.x;			y = _shooter.y;									friendly = true;			rotation = angle;		}		override public function behavior():void{						//if ( Game.isPaused != true ){				//trace(friendly);				//Move it				move();				//Who does it hit test, Player or Enemies				if ( friendly ){ //Friendly 					if ( stillMoving ){												var hitEnemy = hitTestEnemy(this);						if ( hitEnemy ){							hitEnemy.hit(damage);							stillMoving = false;							kill();						}					}				}				else{ //From Enemy					if ( stillMoving ){						var hitFW = hitTestFireworks(this);						if ( hitFW ){							hitFW.hit(damage);							stillMoving = false;							kill();						}					}				}				//				//Obstacles//				if ( stillMoving && ignoreObstacles == false){//					//					var hitObstacle = hitTestObstacle(this);//					if (hitObstacle){//						hitObstacle.hit(damage);//						stillMoving = false;//						kill();//					}//				}																//Life				if (counter >= life && stillMoving){					stillMoving = false;					remove();				}										//}		}		public function move(){						if ( this.y < -10 || this.y > 650 || this.x < -10 || this.x > 490) { //if offscreen				stillMoving = false;				remove();			}					}		override public function kill(){			stillMoving = false;			remove();		}				override public function remove(){															super.remove();					}	}}
package src.punks {	//import flash.display.MovieClip;	//import flash.events.Event;	import flash.filters.GlowFilter;	import src.core.Game;	import src.punks.levels.Level;	import flash.display.Shape;	import flash.media.SoundMixer;		public class Maroon extends Projectile{				var spark:Spark;		var numSpark;				var sound_maroon:SoundMaroon = new SoundMaroon();		public function Maroon(_shooter){			shooter = _shooter;			angle = 0;			speed = 7 + ( Math.random() * 3);			damage = 10;			super(_shooter, angle, speed, damage);			numSpark= Math.pow(2, 7); //8,16,32,64,128,...			inertia = ( Math.random() * 0.4 ) - 0.2;			life = 200;			friendly = shooter.friendly;						//Visual			graphics.beginFill( 0xffffff, 1);			graphics.drawCircle(0,0,2); //gets bigger per level			graphics.endFill();			var glow:GlowFilter = new GlowFilter(0xffffaa, 1, 6, 6, 3);			filters = [glow];		}		override public function behavior():void{			super.behavior();			var particle:Particle;			for ( var p:int=0; p<3; p++){				particle = new Particle();				particle.x = x + ( Math.random() * 6 ) - 3;				particle.y = y + ( Math.random() * 6 ) - 3;				PunksGame.currentLevel.topLayer.addChild(particle);			}			if ( speedY < -2 && stillMoving ){				kill();				stillMoving = false;			}					}		override public function move(){						super.move()									//speed x radians			y += speedY * Math.sin((angle - 90) * (Math.PI / 180));			x += speedX * Math.cos((angle - 90) * (Math.PI / 180));						speedY -= gravity;			//speedX -= inertia;			angle += inertia;			//alpha -= 0.005;					}		override public function kill(){						sound_maroon.play();						//Explode			var boom:Boom = new Boom(this);			boom.x = x;			boom.y = y;			PunksGame.currentLevel.topLayer.addChild(boom);						super.kill()		}				override public function remove(){															super.remove();		}	}}
package src.punks {	import flash.display.MovieClip;	import flash.events.*	import flash.display.Shape;	import src.core.Game;	//import flash.geom.ColorTransform;	import flash.geom.Point;	public class Rock extends PunksGameObject{		public var attached:Boolean;				var hitBox:Shape = new Shape();		var speed:int = 4;		var slot:int = 0;		public function Rock(_shooter, _attached:Boolean = true){						PunksGame.enemyList.push(this);			super();			isVunerable = true;			hp = 100;			shooter = _shooter;			friendly = false;			attached = _shooter;						//hitBox			hitBox.graphics.beginFill(0xff0000, 0);			hitBox.graphics.drawRect(-20,-40, 40, 40);			hitBox.graphics.endFill();			addChild(hitBox);									//Visuals			rotation = Math.random() * 360;								}						override public function behavior():void{			if (attached ){				x = shooter.x;							}			else{				move();			}					}				function move(){									if ( y >= Lanes.slotPositions[slot].y + Lanes.lanesRef.y ){}			else{				y += speed;			}		}		override public function kill(){x			//Search list and delete from array//			for(var i=0; i < PunksGame.starList.length; i++)//			{//				if( PunksGame.starList[i]==this) { PunksGame.starList.splice(i,1) };//			}						super.remove();		}		override public function remove(){			//Search list and delete from array//			for(var i=0; i < PunksGame.starList.length; i++)//			{//				if( PunksGame.starList[i]==this) { PunksGame.starList.splice(i,1) };//			}						super.remove();								}	}}
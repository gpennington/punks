package src.punks {	import flash.display.MovieClip;	import flash.events.*	import flash.filters.GlowFilter;	//import flash.utils.Timer;	//import flash.display.BlendMode;	import src.core.Game;	import flash.geom.ColorTransform;	import flash.geom.Point;	public class Star extends Projectile{		var value:int;		var collectAnimationCounter:int = 0;		var collected:Boolean = false;		var animateToPoint:Point = new Point(440,600);		var animationAngle;		var collectSpeed:Number = 10;		var sound_star:SoundStar = new SoundStar();				public function Star(_shooter, _angle, _value:int = 1){									PunksGame.starList.push(this);						shooter = _shooter;			angle = _angle;			speed = 5;			damage = 0;									value = _value;									//Visuals			rotation = Math.random() * 360;			scaleX = scaleY = 1 + ( _value * 0.1 )			if ( value == 3){				transform.colorTransform = new ColorTransform(5,5,1,1,255,255,1,1); //This doesn't work.  why?			}						var glow:GlowFilter = new GlowFilter(0xffffff, 1, 10, 10, 2);			filters = [glow];						super(shooter, angle, speed, damage);		}						override public function behavior():void{						//Give them a half second to travel first			if ( counter == 12 ){ //activate collection only aftey seperated a bit				addEventListener(MouseEvent.MOUSE_OVER, mouseCollect);			}						if ( collected ){				collectAnimation();			}			else{				move();			}											}				override public  function move(){						super.move();						//speed x radians			y += speedY * Math.sin((angle - 90) * (Math.PI / 180));			x += speedX * Math.cos((angle - 90) * (Math.PI / 180));			if ( speedY > 0){				speedY -= 0.25;			}			else if ( speedY < 0){				speedY = 0;			}			if ( speedX > 0){				speedX -= 0.01;			}			else if ( speedX < 0){				speedX = 0;			}			//fall to the ground			gravity += 0.2;			y += gravity;		}		private function mouseCollect(e:MouseEvent){						if (collected == false){				//Get it				Player.stars += value;				collected = true;								//Where is it going?				animateToPoint.x = 480;				animateToPoint.y = 640;				//Find the target angle				animationAngle = Math.atan((y - animateToPoint.y)/(x - animateToPoint.x)) * (180/Math.PI);				//animationAngle += animationAngle;// + 90;				//Convert to weird 180 flash angles				if ( animateToPoint.x < x ){					animationAngle = -1 * (180 - animationAngle);				}								//How fast?				collectSpeed = 60;								sound_star.play();			}		}				public function starCollect(pointX,pointY){						if (collected == false){							//Get it				Player.stars += value;					collected = true;								//Where is it going?				animateToPoint.x = pointX;				animateToPoint.y = pointY;				//Find the target angle				animationAngle = Math.atan((y - animateToPoint.y)/(x - animateToPoint.x)) * (180/Math.PI);				if ( animateToPoint.x < x ){					animationAngle = -1 * (180 - animationAngle);				}								//How fast?				collectSpeed = 5;								sound_star.play();			}		}		function collectAnimation(){			y += collectSpeed * Math.sin((animationAngle) * (Math.PI / 180));			x += collectSpeed * Math.cos((animationAngle) * (Math.PI / 180));			alpha -= 0.1;			if (collectAnimationCounter >= 10 && stillMoving ){				stillMoving = false;				remove();			}			collectAnimationCounter++;		}		override public function remove(){			//Search list and delete from array			for(var i=0; i < PunksGame.starList.length; i++)			{				if( PunksGame.starList[i]==this) { PunksGame.starList.splice(i,1) };			}			//Remove Listeners			removeEventListener(MouseEvent.MOUSE_OVER, mouseCollect);									super.remove();			//Game.remove(this);								}	}}